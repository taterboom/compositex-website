{"id":"7779fa28-1f9e-49b9-8bf4-ea3752ed8550","nodes":[{"id":"bea084e6-b7e4-440f-9d45-76bc2640652c","metaId":"mainWorld","name":"MainWorld","options":{"expression":"document.getSelection().toString()"},"metaNode":{"_raw":"(function () {\n    /** @type {CompositeX.MetaNodeConfig} */\n    const nodeConfig = {\n      config: {\n        name: \"MainWorld\",\n        desc: \"Get main world info\",\n        input: { type: \"string\", desc: \"expression\" },\n        output: { type: \"any\" },\n        options: [\n          { name: \"expression\", type: \"string\" },\n          { \n            name: \"type\",\n            desc: \"choose eval if website support it or choose exec which has limits\",\n            type: \"enum\",\n            enumItems: [{ name: \"eval\", value: \"eval\"}, { name: \"exec\", value: \"exec\" }],\n            default: \"eval\",\n          }\n        ],\n      },\n      run(input, options, context) {\n        return context.mainWorld(input || options.expression, { type: options.type })\n      },\n    }\n    return nodeConfig\n  })()","id":"mainWorld","config":{"name":"MainWorld","desc":"Get main world info","input":{"type":"string","desc":"expression"},"output":{"type":"any"},"options":[{"name":"expression","type":"string"},{"name":"type","desc":"choose eval if website support it or choose exec which has limits","type":"enum","enumItems":[{"name":"eval","value":"eval"},{"name":"exec","value":"exec"}],"default":"eval"}]}}},{"id":"abb81975-70f4-47f2-9618-8306a165d01d","metaId":"fabe84ef-d153-44a5-a365-e0472a48ed0f","name":"Base64","metaNode":{"_raw":"(function () {\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Base64\",\n      desc: \"Base64 codec\",\n      input: { type: \"string\" },\n      output: { type: \"string\" },\n      options: [\n        {\n          name: \"type\",\n          type: \"enum\",\n          enumItems: [\n            { name: \"decode\", value: \"decode\" },\n            { name: \"encode\", value: \"encode\" },\n          ],\n          default: \"decode\",\n        },\n      ],\n    },\n    run(input, options, context) {\n      if (options.type === \"decode\") {\n        return window.atob(input)\n      } else {\n        return window.btoa(input)\n      }\n    },\n  }\n  return nodeConfig\n})()","id":"fabe84ef-d153-44a5-a365-e0472a48ed0f","config":{"name":"Base64","desc":"Base64 codec","input":{"type":"string"},"output":{"type":"string"},"options":[{"name":"type","type":"enum","enumItems":[{"name":"decode","value":"decode"},{"name":"encode","value":"encode"}],"default":"decode"}]}}}],"name":"Base64 Decode Selection","desc":"Base64 decode selection string"}