{"_raw":"(function () {\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Pinyin\",\n      desc: \"Pinyin convertion based on pinyin-api.vercel.app\",\n      input: { type: \"string\" },\n      output: { type: \"any\" },\n      options: [\n        { name: \"apiOptions\", type: \"json\" },\n        {\n          name: \"outputType\",\n          type: \"enum\",\n          default: \"list\",\n          enumItems: [\n            { name: \"text\", value: \"text\" },\n            { name: \"list\", value: \"list\" },\n          ],\n        },\n      ],\n    },\n    async run(input, options, context) {\n      const url = new URL(\"https://pinyin-api.vercel.app/api/generate\")\n      url.searchParams.append(\"wd\", input)\n      Object.entries(options.apiOptions || {}).forEach(([key, value]) => {\n        url.searchParams.append(key, value)\n      })\n      const result = await fetch(url.toString()).then((res) => res.json())\n      if (options.outputType === \"text\") {\n        return result.join(\" \")\n      } else {\n        return result\n      }\n    },\n  }\n  return nodeConfig\n})()","id":"218a1789-e854-4bff-9771-914141ed0d8d","config":{"name":"Pinyin","desc":"Pinyin convertion based on pinyin-api.vercel.app","input":{"type":"string"},"output":{"type":"any"},"options":[{"name":"apiOptions","type":"json"},{"name":"outputType","type":"enum","default":"list","enumItems":[{"name":"text","value":"text"},{"name":"list","value":"list"}]}]}}