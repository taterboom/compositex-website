[{"id":"d23b98e2-6d91-4c5f-8ef6-5ae4b0446384","nodes":[{"id":"9301d9af-89b2-4b60-9b1a-d4f68e352d81","metaId":"ac2f24df-09c4-47b8-a650-6f2a7296c0db","name":"Tinypng","options":{"apiKey":"PZB818tH4zLbrptt8dMgR5Hn0LZ4n7Ms"},"metaNode":{"_raw":"(function () {\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Tinypng\",\n      desc: \"Compress via Tinypng\",\n      input: { type: \"string\" },\n      output: { type: \"any\" },\n      options: [{ name: \"apiKey\", type: \"string\", desc: \"get your api key in https://tinypng.com/developers\" }],\n    },\n    run(input, options, context) {\n      return fetch(\"https://api.tinify.com/shrink\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Basic ${window.btoa(`api:${options.apiKey}`)}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            source: {\n              url: input,\n            },\n          }),\n        })\n        .then((res) => res.json())\n    },\n  }\n  return nodeConfig\n})()","id":"ac2f24df-09c4-47b8-a650-6f2a7296c0db","config":{"name":"Tinypng","desc":"Compress via Tinypng","input":{"type":"string"},"output":{"type":"any"},"options":[{"name":"apiKey","type":"string","desc":"get your api key in https://tinypng.com/developers"}]}}},{"id":"8f392e67-5ae0-464c-83e7-2e98a98d6032","metaId":"lodashGet","name":"LodashGet","options":{"path":"output.url"},"metaNode":{"_raw":"(function () {\n    const lodashGet = (function () {\n      var FUNC_ERROR_TEXT = \"Expected a function\",\n        HASH_UNDEFINED = \"__lodash_hash_undefined__\",\n        INFINITY = 1 / 0,\n        funcTag = \"[object Function]\",\n        genTag = \"[object GeneratorFunction]\",\n        symbolTag = \"[object Symbol]\",\n        reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n        reIsPlainProp = /^\\w*$/,\n        reLeadingDot = /^\\./,\n        rePropName =\n          /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n        reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n        reEscapeChar = /\\\\(\\\\)?/g,\n        reIsHostCtor = /^\\[object .+?Constructor\\]$/,\n        freeGlobal = \"object\" == typeof global && global && global.Object === Object && global,\n        freeSelf = \"object\" == typeof self && self && self.Object === Object && self,\n        root = freeGlobal || freeSelf || Function(\"return this\")()\n      function getValue(t, e) {\n        return null == t ? void 0 : t[e]\n      }\n      function isHostObject(t) {\n        var e = !1\n        if (null != t && \"function\" != typeof t.toString)\n          try {\n            e = !!(t + \"\")\n          } catch (t) {}\n        return e\n      }\n      var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype,\n        coreJsData = root[\"__core-js_shared__\"],\n        maskSrcKey = (function () {\n          var t = /[^.]+$/.exec((coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || \"\")\n          return t ? \"Symbol(src)_1.\" + t : \"\"\n        })(),\n        funcToString = funcProto.toString,\n        hasOwnProperty = objectProto.hasOwnProperty,\n        objectToString = objectProto.toString,\n        reIsNative = RegExp(\n          \"^\" +\n            funcToString\n              .call(hasOwnProperty)\n              .replace(reRegExpChar, \"\\\\$&\")\n              .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") +\n            \"$\"\n        ),\n        Symbol = root.Symbol,\n        splice = arrayProto.splice,\n        Map = getNative(root, \"Map\"),\n        nativeCreate = getNative(Object, \"create\"),\n        symbolProto = Symbol ? Symbol.prototype : void 0,\n        symbolToString = symbolProto ? symbolProto.toString : void 0\n      function Hash(t) {\n        var e = -1,\n          r = t ? t.length : 0\n        for (this.clear(); ++e < r; ) {\n          var a = t[e]\n          this.set(a[0], a[1])\n        }\n      }\n      function hashClear() {\n        this.__data__ = nativeCreate ? nativeCreate(null) : {}\n      }\n      function hashDelete(t) {\n        return this.has(t) && delete this.__data__[t]\n      }\n      function hashGet(t) {\n        var e = this.__data__\n        if (nativeCreate) {\n          var r = e[t]\n          return r === HASH_UNDEFINED ? void 0 : r\n        }\n        return hasOwnProperty.call(e, t) ? e[t] : void 0\n      }\n      function hashHas(t) {\n        var e = this.__data__\n        return nativeCreate ? void 0 !== e[t] : hasOwnProperty.call(e, t)\n      }\n      function hashSet(t, e) {\n        return (this.__data__[t] = nativeCreate && void 0 === e ? HASH_UNDEFINED : e), this\n      }\n      function ListCache(t) {\n        var e = -1,\n          r = t ? t.length : 0\n        for (this.clear(); ++e < r; ) {\n          var a = t[e]\n          this.set(a[0], a[1])\n        }\n      }\n      function listCacheClear() {\n        this.__data__ = []\n      }\n      function listCacheDelete(t) {\n        var e = this.__data__,\n          r = assocIndexOf(e, t)\n        return !(r < 0) && (r == e.length - 1 ? e.pop() : splice.call(e, r, 1), !0)\n      }\n      function listCacheGet(t) {\n        var e = this.__data__,\n          r = assocIndexOf(e, t)\n        return r < 0 ? void 0 : e[r][1]\n      }\n      function listCacheHas(t) {\n        return -1 < assocIndexOf(this.__data__, t)\n      }\n      function listCacheSet(t, e) {\n        var r = this.__data__,\n          a = assocIndexOf(r, t)\n        return a < 0 ? r.push([t, e]) : (r[a][1] = e), this\n      }\n      function MapCache(t) {\n        var e = -1,\n          r = t ? t.length : 0\n        for (this.clear(); ++e < r; ) {\n          var a = t[e]\n          this.set(a[0], a[1])\n        }\n      }\n      function mapCacheClear() {\n        this.__data__ = { hash: new Hash(), map: new (Map || ListCache)(), string: new Hash() }\n      }\n      function mapCacheDelete(t) {\n        return getMapData(this, t).delete(t)\n      }\n      function mapCacheGet(t) {\n        return getMapData(this, t).get(t)\n      }\n      function mapCacheHas(t) {\n        return getMapData(this, t).has(t)\n      }\n      function mapCacheSet(t, e) {\n        return getMapData(this, t).set(t, e), this\n      }\n      function assocIndexOf(t, e) {\n        for (var r = t.length; r--; ) if (eq(t[r][0], e)) return r\n        return -1\n      }\n      function baseGet(t, e) {\n        for (var r = 0, a = (e = isKey(e, t) ? [e] : castPath(e)).length; null != t && r < a; )\n          t = t[toKey(e[r++])]\n        return r && r == a ? t : void 0\n      }\n      function baseIsNative(t) {\n        return (\n          !(!isObject(t) || isMasked(t)) &&\n          (isFunction(t) || isHostObject(t) ? reIsNative : reIsHostCtor).test(toSource(t))\n        )\n      }\n      function baseToString(t) {\n        if (\"string\" == typeof t) return t\n        if (isSymbol(t)) return symbolToString ? symbolToString.call(t) : \"\"\n        var e = t + \"\"\n        return \"0\" == e && 1 / t == -INFINITY ? \"-0\" : e\n      }\n      function castPath(t) {\n        return isArray(t) ? t : stringToPath(t)\n      }\n      function getMapData(t, e) {\n        var r = t.__data__\n        return isKeyable(e) ? r[\"string\" == typeof e ? \"string\" : \"hash\"] : r.map\n      }\n      function getNative(t, e) {\n        var r = getValue(t, e)\n        return baseIsNative(r) ? r : void 0\n      }\n      function isKey(t, e) {\n        if (isArray(t)) return !1\n        var r = typeof t\n        return (\n          !(\"number\" != r && \"symbol\" != r && \"boolean\" != r && null != t && !isSymbol(t)) ||\n          reIsPlainProp.test(t) ||\n          !reIsDeepProp.test(t) ||\n          (null != e && t in Object(e))\n        )\n      }\n      function isKeyable(t) {\n        var e = typeof t\n        return \"string\" == e || \"number\" == e || \"symbol\" == e || \"boolean\" == e\n          ? \"__proto__\" !== t\n          : null === t\n      }\n      function isMasked(t) {\n        return !!maskSrcKey && maskSrcKey in t\n      }\n      ;(Hash.prototype.clear = hashClear),\n        (Hash.prototype.delete = hashDelete),\n        (Hash.prototype.get = hashGet),\n        (Hash.prototype.has = hashHas),\n        (Hash.prototype.set = hashSet),\n        (ListCache.prototype.clear = listCacheClear),\n        (ListCache.prototype.delete = listCacheDelete),\n        (ListCache.prototype.get = listCacheGet),\n        (ListCache.prototype.has = listCacheHas),\n        (ListCache.prototype.set = listCacheSet),\n        (MapCache.prototype.clear = mapCacheClear),\n        (MapCache.prototype.delete = mapCacheDelete),\n        (MapCache.prototype.get = mapCacheGet),\n        (MapCache.prototype.has = mapCacheHas),\n        (MapCache.prototype.set = mapCacheSet)\n      var stringToPath = memoize(function (t) {\n        t = toString(t)\n        var o = []\n        return (\n          reLeadingDot.test(t) && o.push(\"\"),\n          t.replace(rePropName, function (t, e, r, a) {\n            o.push(r ? a.replace(reEscapeChar, \"$1\") : e || t)\n          }),\n          o\n        )\n      })\n      function toKey(t) {\n        if (\"string\" == typeof t || isSymbol(t)) return t\n        var e = t + \"\"\n        return \"0\" == e && 1 / t == -INFINITY ? \"-0\" : e\n      }\n      function toSource(t) {\n        if (null != t) {\n          try {\n            return funcToString.call(t)\n          } catch (t) {}\n          try {\n            return t + \"\"\n          } catch (t) {}\n        }\n        return \"\"\n      }\n      function memoize(o, n) {\n        if (\"function\" != typeof o || (n && \"function\" != typeof n))\n          throw new TypeError(FUNC_ERROR_TEXT)\n        var i = function () {\n          var t = arguments,\n            e = n ? n.apply(this, t) : t[0],\n            r = i.cache\n          if (r.has(e)) return r.get(e)\n          var a = o.apply(this, t)\n          return (i.cache = r.set(e, a)), a\n        }\n        return (i.cache = new (memoize.Cache || MapCache)()), i\n      }\n      function eq(t, e) {\n        return t === e || (t != t && e != e)\n      }\n      memoize.Cache = MapCache\n      var isArray = Array.isArray\n      function isFunction(t) {\n        var e = isObject(t) ? objectToString.call(t) : \"\"\n        return e == funcTag || e == genTag\n      }\n      function isObject(t) {\n        var e = typeof t\n        return !!t && (\"object\" == e || \"function\" == e)\n      }\n      function isObjectLike(t) {\n        return !!t && \"object\" == typeof t\n      }\n      function isSymbol(t) {\n        return \"symbol\" == typeof t || (isObjectLike(t) && objectToString.call(t) == symbolTag)\n      }\n      function toString(t) {\n        return null == t ? \"\" : baseToString(t)\n      }\n      function get(t, e, r) {\n        var a = null == t ? void 0 : baseGet(t, e)\n        return void 0 === a ? r : a\n      }\n      return get\n    })()\n    /** @type {CompositeX.MetaNodeConfig} */\n    const nodeConfig = {\n      config: {\n        name: \"LodashGet\",\n        desc: \"Get element from an object via lodash.get\",\n        input: { type: \"any\" },\n        output: { type: \"any\" },\n        options: [{ name: \"path\", type: \"string\" }],\n      },\n      run(input, options, context) {\n        return lodashGet(input, options.path)\n      },\n    }\n    return nodeConfig\n  })()","id":"lodashGet","config":{"name":"LodashGet","desc":"Get element from an object via lodash.get","input":{"type":"any"},"output":{"type":"any"},"options":[{"name":"path","type":"string"}]}}}],"name":"Tinypng Compress","desc":""},{"id":"4e3bbd66-702f-4ed6-823d-1ea6d7d9bb5b","nodes":[{"id":"f567a2f2-92f1-438b-8e8e-2a876d5786d6","metaId":"c31d573b-d68a-436a-8f44-a5c7a5285bb0","name":"Color","options":{"format":"rgb"},"metaNode":{"_raw":"(function () {\n  const colorNames = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n  }\n  var concat = Array.prototype.concat\n  var slice = Array.prototype.slice\n  function swizzle(args) {\n    var results = []\n    for (var i = 0, len = args.length; i < len; i++) {\n      var arg = args[i]\n      if (Array.isArray(arg)) {\n        results = concat.call(results, slice.call(arg))\n      } else {\n        results.push(arg)\n      }\n    }\n    return results\n  }\n  var hasOwnProperty = Object.hasOwnProperty,\n    reverseNames = Object.create(null)\n  for (var name in colorNames)\n    hasOwnProperty.call(colorNames, name) && (reverseNames[colorNames[name]] = name)\n  var cs = { to: {}, get: {} }\n  function clamp(r, e, a) {\n    return Math.min(Math.max(e, r), a)\n  }\n  function hexDouble(r) {\n    var e = Math.round(r).toString(16).toUpperCase()\n    return e.length < 2 ? \"0\" + e : e\n  }\n  ;(cs.get = function (r) {\n    var e, a\n    switch (r.substring(0, 3).toLowerCase()) {\n      case \"hsl\":\n        ;(e = cs.get.hsl(r)), (a = \"hsl\")\n        break\n      case \"hwb\":\n        ;(e = cs.get.hwb(r)), (a = \"hwb\")\n        break\n      default:\n        ;(e = cs.get.rgb(r)), (a = \"rgb\")\n    }\n    return e ? { model: a, value: e } : null\n  }),\n    (cs.get.rgb = function (r) {\n      if (!r) return null\n      var e,\n        a,\n        s,\n        t = [0, 0, 0, 1]\n      if ((e = r.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i))) {\n        for (s = e[2], e = e[1], a = 0; a < 3; a++) {\n          var n = 2 * a\n          t[a] = parseInt(e.slice(n, n + 2), 16)\n        }\n        s && (t[3] = parseInt(s, 16) / 255)\n      } else if ((e = r.match(/^#([a-f0-9]{3,4})$/i))) {\n        for (s = (e = e[1])[3], a = 0; a < 3; a++) t[a] = parseInt(e[a] + e[a], 16)\n        s && (t[3] = parseInt(s + s, 16) / 255)\n      } else if (\n        (e = r.match(\n          /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/\n        ))\n      ) {\n        for (a = 0; a < 3; a++) t[a] = parseInt(e[a + 1], 0)\n        e[4] && (e[5] ? (t[3] = 0.01 * parseFloat(e[4])) : (t[3] = parseFloat(e[4])))\n      } else {\n        if (\n          !(e = r.match(\n            /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/\n          ))\n        )\n          return (e = r.match(/^(\\w+)$/))\n            ? \"transparent\" === e[1]\n              ? [0, 0, 0, 0]\n              : hasOwnProperty.call(colorNames, e[1])\n              ? (((t = colorNames[e[1]])[3] = 1), t)\n              : null\n            : null\n        for (a = 0; a < 3; a++) t[a] = Math.round(2.55 * parseFloat(e[a + 1]))\n        e[4] && (e[5] ? (t[3] = 0.01 * parseFloat(e[4])) : (t[3] = parseFloat(e[4])))\n      }\n      for (a = 0; a < 3; a++) t[a] = clamp(t[a], 0, 255)\n      return (t[3] = clamp(t[3], 0, 1)), t\n    }),\n    (cs.get.hsl = function (r) {\n      if (!r) return null\n      var e = r.match(\n        /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/\n      )\n      if (e) {\n        var a = parseFloat(e[4])\n        return [\n          ((parseFloat(e[1]) % 360) + 360) % 360,\n          clamp(parseFloat(e[2]), 0, 100),\n          clamp(parseFloat(e[3]), 0, 100),\n          clamp(isNaN(a) ? 1 : a, 0, 1),\n        ]\n      }\n      return null\n    }),\n    (cs.get.hwb = function (r) {\n      if (!r) return null\n      var e = r.match(\n        /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/\n      )\n      if (e) {\n        var a = parseFloat(e[4])\n        return [\n          ((parseFloat(e[1]) % 360) + 360) % 360,\n          clamp(parseFloat(e[2]), 0, 100),\n          clamp(parseFloat(e[3]), 0, 100),\n          clamp(isNaN(a) ? 1 : a, 0, 1),\n        ]\n      }\n      return null\n    }),\n    (cs.to.hex = function () {\n      var r = swizzle(arguments)\n      return (\n        \"#\" +\n        hexDouble(r[0]) +\n        hexDouble(r[1]) +\n        hexDouble(r[2]) +\n        (r[3] < 1 ? hexDouble(Math.round(255 * r[3])) : \"\")\n      )\n    }),\n    (cs.to.rgb = function () {\n      var r = swizzle(arguments)\n      return r.length < 4 || 1 === r[3]\n        ? \"rgb(\" + Math.round(r[0]) + \", \" + Math.round(r[1]) + \", \" + Math.round(r[2]) + \")\"\n        : \"rgba(\" +\n            Math.round(r[0]) +\n            \", \" +\n            Math.round(r[1]) +\n            \", \" +\n            Math.round(r[2]) +\n            \", \" +\n            r[3] +\n            \")\"\n    }),\n    (cs.to.rgb.percent = function () {\n      var r = swizzle(arguments),\n        e = Math.round((r[0] / 255) * 100),\n        a = Math.round((r[1] / 255) * 100),\n        s = Math.round((r[2] / 255) * 100)\n      return r.length < 4 || 1 === r[3]\n        ? \"rgb(\" + e + \"%, \" + a + \"%, \" + s + \"%)\"\n        : \"rgba(\" + e + \"%, \" + a + \"%, \" + s + \"%, \" + r[3] + \")\"\n    }),\n    (cs.to.hsl = function () {\n      var r = swizzle(arguments)\n      return r.length < 4 || 1 === r[3]\n        ? \"hsl(\" + r[0] + \", \" + r[1] + \"%, \" + r[2] + \"%)\"\n        : \"hsla(\" + r[0] + \", \" + r[1] + \"%, \" + r[2] + \"%, \" + r[3] + \")\"\n    }),\n    (cs.to.hwb = function () {\n      var r = swizzle(arguments),\n        e = \"\"\n      return (\n        r.length >= 4 && 1 !== r[3] && (e = \", \" + r[3]),\n        \"hwb(\" + r[0] + \", \" + r[1] + \"%, \" + r[2] + \"%\" + e + \")\"\n      )\n    }),\n    (cs.to.keyword = function (r) {\n      return reverseNames[r.slice(0, 3)]\n    })\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Color\",\n      desc: \"Color convert\",\n      input: { type: \"string\" },\n      output: { type: \"string\" },\n      options: [{ name: \"format\", type: \"string\", default: \"hex\" }],\n    },\n    run(input, options, context) {\n      console.log(cs.to.hex([1, 2, 3, 1]))\n      return cs.to[options.format](cs.get(input).value)\n    },\n  }\n  return nodeConfig\n})()","id":"c31d573b-d68a-436a-8f44-a5c7a5285bb0","config":{"name":"Color","desc":"Color convert","input":{"type":"string"},"output":{"type":"string"},"options":[{"name":"format","type":"string","default":"hex"}]}}}],"name":"RGB","desc":""},{"id":"7895096c-80e8-41a6-a4a8-8715cb12c25b","nodes":[{"id":"bea084e6-b7e4-440f-9d45-76bc2640652c","metaId":"mainWorld","name":"MainWorld","options":{"expression":"document.getSelection().toString()"},"metaNode":{"_raw":"(function () {\n    /** @type {CompositeX.MetaNodeConfig} */\n    const nodeConfig = {\n      config: {\n        name: \"MainWorld\",\n        desc: \"Get main world info\",\n        input: { type: \"string\" },\n        output: { type: \"any\" },\n        options: [\n          { name: \"expression\", type: \"string\" },\n          { \n            name: \"type\",\n            desc: \"choose eval if website support it or choose exec which has limits\",\n            type: \"enum\",\n            enumItems: [{ name: \"eval\", value: \"eval\"}, { name: \"exec\", value: \"exec\" }],\n            default: \"eval\",\n          }\n        ],\n      },\n      run(input, options, context) {\n        return context.mainWorld(input || options.expression, { type: options.type })\n      },\n    }\n    return nodeConfig\n  })()","id":"mainWorld","config":{"name":"MainWorld","desc":"Get main world info","input":{"type":"string"},"output":{"type":"any"},"options":[{"name":"expression","type":"string"},{"name":"type","desc":"choose eval if website support it or choose exec which has limits","type":"enum","enumItems":[{"name":"eval","value":"eval"},{"name":"exec","value":"exec"}],"default":"eval"}]}}},{"id":"abb81975-70f4-47f2-9618-8306a165d01d","metaId":"fabe84ef-d153-44a5-a365-e0472a48ed0f","name":"Base64","metaNode":{"_raw":"(function () {\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Base64\",\n      desc: \"Base64 codec\",\n      input: { type: \"string\" },\n      output: { type: \"string\" },\n      options: [\n        {\n          name: \"type\",\n          type: \"enum\",\n          enumItems: [\n            { name: \"decode\", value: \"decode\" },\n            { name: \"encode\", value: \"encode\" },\n          ],\n          default: \"decode\",\n        },\n      ],\n    },\n    run(input, options, context) {\n      if (options.type === \"decode\") {\n        return window.atob(input)\n      } else {\n        return window.btoa(input)\n      }\n    },\n  }\n  return nodeConfig\n})()","id":"fabe84ef-d153-44a5-a365-e0472a48ed0f","config":{"name":"Base64","desc":"Base64 codec","input":{"type":"string"},"output":{"type":"string"},"options":[{"name":"type","type":"enum","enumItems":[{"name":"decode","value":"decode"},{"name":"encode","value":"encode"}],"default":"decode"}]}}}],"name":"Base64 Deocode Selection","desc":""},{"id":"603ea1a5-8324-4e0d-855b-0a717777a947","nodes":[{"id":"38ee5b08-06f6-4bf7-a93b-0208e8a15406","metaId":"mainWorld","name":"MainWorld","options":{"expression":"document.getSelection().toString()"},"metaNode":{"_raw":"(function () {\n    /** @type {CompositeX.MetaNodeConfig} */\n    const nodeConfig = {\n      config: {\n        name: \"MainWorld\",\n        desc: \"Get main world info\",\n        input: { type: \"string\" },\n        output: { type: \"any\" },\n        options: [\n          { name: \"expression\", type: \"string\" },\n          { \n            name: \"type\",\n            desc: \"choose eval if website support it or choose exec which has limits\",\n            type: \"enum\",\n            enumItems: [{ name: \"eval\", value: \"eval\"}, { name: \"exec\", value: \"exec\" }],\n            default: \"eval\",\n          }\n        ],\n      },\n      run(input, options, context) {\n        return context.mainWorld(input || options.expression, { type: options.type })\n      },\n    }\n    return nodeConfig\n  })()","id":"mainWorld","config":{"name":"MainWorld","desc":"Get main world info","input":{"type":"string"},"output":{"type":"any"},"options":[{"name":"expression","type":"string"},{"name":"type","desc":"choose eval if website support it or choose exec which has limits","type":"enum","enumItems":[{"name":"eval","value":"eval"},{"name":"exec","value":"exec"}],"default":"eval"}]}}},{"id":"1a714afe-1628-47da-9899-0c6944f1551a","metaId":"218a1789-e854-4bff-9771-914141ed0d8d","name":"Pinyin","metaNode":{"_raw":"(function () {\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Pinyin\",\n      desc: \"Pinyin convertion based on pinyin-api.vercel.app\",\n      input: { type: \"string\" },\n      output: { type: \"any\" },\n      options: [\n        { name: \"apiOptions\", type: \"json\" },\n        {\n          name: \"outputType\",\n          type: \"enum\",\n          default: \"list\",\n          enumItems: [\n            { name: \"text\", value: \"text\" },\n            { name: \"list\", value: \"list\" },\n          ],\n        },\n      ],\n    },\n    async run(input, options, context) {\n      const url = new URL(\"https://pinyin-api.vercel.app/api/generate\")\n      url.searchParams.append(\"wd\", input)\n      Object.entries(options.apiOptions || {}).forEach(([key, value]) => {\n        url.searchParams.append(key, value)\n      })\n      const result = await context.fetch(url.toString()).then((res) => res.data)\n      if (options.outputType === \"text\") {\n        return result.join(\" \")\n      } else {\n        return result\n      }\n    },\n  }\n  return nodeConfig\n})()","id":"218a1789-e854-4bff-9771-914141ed0d8d","config":{"name":"Pinyin","desc":"Pinyin convertion based on pinyin-api.vercel.app","input":{"type":"string"},"output":{"type":"any"},"options":[{"name":"apiOptions","type":"json"},{"name":"outputType","type":"enum","default":"list","enumItems":[{"name":"text","value":"text"},{"name":"list","value":"list"}]}]}}}],"name":"Pinyin Convert Selection","desc":""},{"_raw":"(function () {\n    /** @type {CompositeX.MetaNodeConfig} */\n    const nodeConfig = {\n      config: {\n        name: \"MainWorld\",\n        desc: \"Get main world info\",\n        input: { type: \"string\" },\n        output: { type: \"any\" },\n        options: [\n          { name: \"expression\", type: \"string\" },\n          { \n            name: \"type\",\n            desc: \"choose eval if website support it or choose exec which has limits\",\n            type: \"enum\",\n            enumItems: [{ name: \"eval\", value: \"eval\"}, { name: \"exec\", value: \"exec\" }],\n            default: \"eval\",\n          }\n        ],\n      },\n      run(input, options, context) {\n        return context.mainWorld(input || options.expression, { type: options.type })\n      },\n    }\n    return nodeConfig\n  })()","id":"mainWorld","config":{"name":"MainWorld","desc":"Get main world info","input":{"type":"string"},"output":{"type":"any"},"options":[{"name":"expression","type":"string"},{"name":"type","desc":"choose eval if website support it or choose exec which has limits","type":"enum","enumItems":[{"name":"eval","value":"eval"},{"name":"exec","value":"exec"}],"default":"eval"}]}},{"_raw":"(function () {\n    const lodashGet = (function () {\n      var FUNC_ERROR_TEXT = \"Expected a function\",\n        HASH_UNDEFINED = \"__lodash_hash_undefined__\",\n        INFINITY = 1 / 0,\n        funcTag = \"[object Function]\",\n        genTag = \"[object GeneratorFunction]\",\n        symbolTag = \"[object Symbol]\",\n        reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n        reIsPlainProp = /^\\w*$/,\n        reLeadingDot = /^\\./,\n        rePropName =\n          /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n        reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n        reEscapeChar = /\\\\(\\\\)?/g,\n        reIsHostCtor = /^\\[object .+?Constructor\\]$/,\n        freeGlobal = \"object\" == typeof global && global && global.Object === Object && global,\n        freeSelf = \"object\" == typeof self && self && self.Object === Object && self,\n        root = freeGlobal || freeSelf || Function(\"return this\")()\n      function getValue(t, e) {\n        return null == t ? void 0 : t[e]\n      }\n      function isHostObject(t) {\n        var e = !1\n        if (null != t && \"function\" != typeof t.toString)\n          try {\n            e = !!(t + \"\")\n          } catch (t) {}\n        return e\n      }\n      var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype,\n        coreJsData = root[\"__core-js_shared__\"],\n        maskSrcKey = (function () {\n          var t = /[^.]+$/.exec((coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || \"\")\n          return t ? \"Symbol(src)_1.\" + t : \"\"\n        })(),\n        funcToString = funcProto.toString,\n        hasOwnProperty = objectProto.hasOwnProperty,\n        objectToString = objectProto.toString,\n        reIsNative = RegExp(\n          \"^\" +\n            funcToString\n              .call(hasOwnProperty)\n              .replace(reRegExpChar, \"\\\\$&\")\n              .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") +\n            \"$\"\n        ),\n        Symbol = root.Symbol,\n        splice = arrayProto.splice,\n        Map = getNative(root, \"Map\"),\n        nativeCreate = getNative(Object, \"create\"),\n        symbolProto = Symbol ? Symbol.prototype : void 0,\n        symbolToString = symbolProto ? symbolProto.toString : void 0\n      function Hash(t) {\n        var e = -1,\n          r = t ? t.length : 0\n        for (this.clear(); ++e < r; ) {\n          var a = t[e]\n          this.set(a[0], a[1])\n        }\n      }\n      function hashClear() {\n        this.__data__ = nativeCreate ? nativeCreate(null) : {}\n      }\n      function hashDelete(t) {\n        return this.has(t) && delete this.__data__[t]\n      }\n      function hashGet(t) {\n        var e = this.__data__\n        if (nativeCreate) {\n          var r = e[t]\n          return r === HASH_UNDEFINED ? void 0 : r\n        }\n        return hasOwnProperty.call(e, t) ? e[t] : void 0\n      }\n      function hashHas(t) {\n        var e = this.__data__\n        return nativeCreate ? void 0 !== e[t] : hasOwnProperty.call(e, t)\n      }\n      function hashSet(t, e) {\n        return (this.__data__[t] = nativeCreate && void 0 === e ? HASH_UNDEFINED : e), this\n      }\n      function ListCache(t) {\n        var e = -1,\n          r = t ? t.length : 0\n        for (this.clear(); ++e < r; ) {\n          var a = t[e]\n          this.set(a[0], a[1])\n        }\n      }\n      function listCacheClear() {\n        this.__data__ = []\n      }\n      function listCacheDelete(t) {\n        var e = this.__data__,\n          r = assocIndexOf(e, t)\n        return !(r < 0) && (r == e.length - 1 ? e.pop() : splice.call(e, r, 1), !0)\n      }\n      function listCacheGet(t) {\n        var e = this.__data__,\n          r = assocIndexOf(e, t)\n        return r < 0 ? void 0 : e[r][1]\n      }\n      function listCacheHas(t) {\n        return -1 < assocIndexOf(this.__data__, t)\n      }\n      function listCacheSet(t, e) {\n        var r = this.__data__,\n          a = assocIndexOf(r, t)\n        return a < 0 ? r.push([t, e]) : (r[a][1] = e), this\n      }\n      function MapCache(t) {\n        var e = -1,\n          r = t ? t.length : 0\n        for (this.clear(); ++e < r; ) {\n          var a = t[e]\n          this.set(a[0], a[1])\n        }\n      }\n      function mapCacheClear() {\n        this.__data__ = { hash: new Hash(), map: new (Map || ListCache)(), string: new Hash() }\n      }\n      function mapCacheDelete(t) {\n        return getMapData(this, t).delete(t)\n      }\n      function mapCacheGet(t) {\n        return getMapData(this, t).get(t)\n      }\n      function mapCacheHas(t) {\n        return getMapData(this, t).has(t)\n      }\n      function mapCacheSet(t, e) {\n        return getMapData(this, t).set(t, e), this\n      }\n      function assocIndexOf(t, e) {\n        for (var r = t.length; r--; ) if (eq(t[r][0], e)) return r\n        return -1\n      }\n      function baseGet(t, e) {\n        for (var r = 0, a = (e = isKey(e, t) ? [e] : castPath(e)).length; null != t && r < a; )\n          t = t[toKey(e[r++])]\n        return r && r == a ? t : void 0\n      }\n      function baseIsNative(t) {\n        return (\n          !(!isObject(t) || isMasked(t)) &&\n          (isFunction(t) || isHostObject(t) ? reIsNative : reIsHostCtor).test(toSource(t))\n        )\n      }\n      function baseToString(t) {\n        if (\"string\" == typeof t) return t\n        if (isSymbol(t)) return symbolToString ? symbolToString.call(t) : \"\"\n        var e = t + \"\"\n        return \"0\" == e && 1 / t == -INFINITY ? \"-0\" : e\n      }\n      function castPath(t) {\n        return isArray(t) ? t : stringToPath(t)\n      }\n      function getMapData(t, e) {\n        var r = t.__data__\n        return isKeyable(e) ? r[\"string\" == typeof e ? \"string\" : \"hash\"] : r.map\n      }\n      function getNative(t, e) {\n        var r = getValue(t, e)\n        return baseIsNative(r) ? r : void 0\n      }\n      function isKey(t, e) {\n        if (isArray(t)) return !1\n        var r = typeof t\n        return (\n          !(\"number\" != r && \"symbol\" != r && \"boolean\" != r && null != t && !isSymbol(t)) ||\n          reIsPlainProp.test(t) ||\n          !reIsDeepProp.test(t) ||\n          (null != e && t in Object(e))\n        )\n      }\n      function isKeyable(t) {\n        var e = typeof t\n        return \"string\" == e || \"number\" == e || \"symbol\" == e || \"boolean\" == e\n          ? \"__proto__\" !== t\n          : null === t\n      }\n      function isMasked(t) {\n        return !!maskSrcKey && maskSrcKey in t\n      }\n      ;(Hash.prototype.clear = hashClear),\n        (Hash.prototype.delete = hashDelete),\n        (Hash.prototype.get = hashGet),\n        (Hash.prototype.has = hashHas),\n        (Hash.prototype.set = hashSet),\n        (ListCache.prototype.clear = listCacheClear),\n        (ListCache.prototype.delete = listCacheDelete),\n        (ListCache.prototype.get = listCacheGet),\n        (ListCache.prototype.has = listCacheHas),\n        (ListCache.prototype.set = listCacheSet),\n        (MapCache.prototype.clear = mapCacheClear),\n        (MapCache.prototype.delete = mapCacheDelete),\n        (MapCache.prototype.get = mapCacheGet),\n        (MapCache.prototype.has = mapCacheHas),\n        (MapCache.prototype.set = mapCacheSet)\n      var stringToPath = memoize(function (t) {\n        t = toString(t)\n        var o = []\n        return (\n          reLeadingDot.test(t) && o.push(\"\"),\n          t.replace(rePropName, function (t, e, r, a) {\n            o.push(r ? a.replace(reEscapeChar, \"$1\") : e || t)\n          }),\n          o\n        )\n      })\n      function toKey(t) {\n        if (\"string\" == typeof t || isSymbol(t)) return t\n        var e = t + \"\"\n        return \"0\" == e && 1 / t == -INFINITY ? \"-0\" : e\n      }\n      function toSource(t) {\n        if (null != t) {\n          try {\n            return funcToString.call(t)\n          } catch (t) {}\n          try {\n            return t + \"\"\n          } catch (t) {}\n        }\n        return \"\"\n      }\n      function memoize(o, n) {\n        if (\"function\" != typeof o || (n && \"function\" != typeof n))\n          throw new TypeError(FUNC_ERROR_TEXT)\n        var i = function () {\n          var t = arguments,\n            e = n ? n.apply(this, t) : t[0],\n            r = i.cache\n          if (r.has(e)) return r.get(e)\n          var a = o.apply(this, t)\n          return (i.cache = r.set(e, a)), a\n        }\n        return (i.cache = new (memoize.Cache || MapCache)()), i\n      }\n      function eq(t, e) {\n        return t === e || (t != t && e != e)\n      }\n      memoize.Cache = MapCache\n      var isArray = Array.isArray\n      function isFunction(t) {\n        var e = isObject(t) ? objectToString.call(t) : \"\"\n        return e == funcTag || e == genTag\n      }\n      function isObject(t) {\n        var e = typeof t\n        return !!t && (\"object\" == e || \"function\" == e)\n      }\n      function isObjectLike(t) {\n        return !!t && \"object\" == typeof t\n      }\n      function isSymbol(t) {\n        return \"symbol\" == typeof t || (isObjectLike(t) && objectToString.call(t) == symbolTag)\n      }\n      function toString(t) {\n        return null == t ? \"\" : baseToString(t)\n      }\n      function get(t, e, r) {\n        var a = null == t ? void 0 : baseGet(t, e)\n        return void 0 === a ? r : a\n      }\n      return get\n    })()\n    /** @type {CompositeX.MetaNodeConfig} */\n    const nodeConfig = {\n      config: {\n        name: \"LodashGet\",\n        desc: \"Get element from an object via lodash.get\",\n        input: { type: \"any\" },\n        output: { type: \"any\" },\n        options: [{ name: \"path\", type: \"string\" }],\n      },\n      run(input, options, context) {\n        return lodashGet(input, options.path)\n      },\n    }\n    return nodeConfig\n  })()","id":"lodashGet","config":{"name":"LodashGet","desc":"Get element from an object via lodash.get","input":{"type":"any"},"output":{"type":"any"},"options":[{"name":"path","type":"string"}]}},{"_raw":"(function () {\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Tinypng\",\n      desc: \"Compress via Tinypng\",\n      input: { type: \"string\" },\n      output: { type: \"any\" },\n      options: [{ name: \"apiKey\", type: \"string\", desc: \"get your api key in https://tinypng.com/developers\" }],\n    },\n    run(input, options, context) {\n      return fetch(\"https://api.tinify.com/shrink\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Basic ${window.btoa(`api:${options.apiKey}`)}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            source: {\n              url: input,\n            },\n          }),\n        })\n        .then((res) => res.json())\n    },\n  }\n  return nodeConfig\n})()","id":"ac2f24df-09c4-47b8-a650-6f2a7296c0db","config":{"name":"Tinypng","desc":"Compress via Tinypng","input":{"type":"string"},"output":{"type":"any"},"options":[{"name":"apiKey","type":"string","desc":"get your api key in https://tinypng.com/developers"}]}},{"_raw":"(function () {\n  const colorNames = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n  }\n  var concat = Array.prototype.concat\n  var slice = Array.prototype.slice\n  function swizzle(args) {\n    var results = []\n    for (var i = 0, len = args.length; i < len; i++) {\n      var arg = args[i]\n      if (Array.isArray(arg)) {\n        results = concat.call(results, slice.call(arg))\n      } else {\n        results.push(arg)\n      }\n    }\n    return results\n  }\n  var hasOwnProperty = Object.hasOwnProperty,\n    reverseNames = Object.create(null)\n  for (var name in colorNames)\n    hasOwnProperty.call(colorNames, name) && (reverseNames[colorNames[name]] = name)\n  var cs = { to: {}, get: {} }\n  function clamp(r, e, a) {\n    return Math.min(Math.max(e, r), a)\n  }\n  function hexDouble(r) {\n    var e = Math.round(r).toString(16).toUpperCase()\n    return e.length < 2 ? \"0\" + e : e\n  }\n  ;(cs.get = function (r) {\n    var e, a\n    switch (r.substring(0, 3).toLowerCase()) {\n      case \"hsl\":\n        ;(e = cs.get.hsl(r)), (a = \"hsl\")\n        break\n      case \"hwb\":\n        ;(e = cs.get.hwb(r)), (a = \"hwb\")\n        break\n      default:\n        ;(e = cs.get.rgb(r)), (a = \"rgb\")\n    }\n    return e ? { model: a, value: e } : null\n  }),\n    (cs.get.rgb = function (r) {\n      if (!r) return null\n      var e,\n        a,\n        s,\n        t = [0, 0, 0, 1]\n      if ((e = r.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i))) {\n        for (s = e[2], e = e[1], a = 0; a < 3; a++) {\n          var n = 2 * a\n          t[a] = parseInt(e.slice(n, n + 2), 16)\n        }\n        s && (t[3] = parseInt(s, 16) / 255)\n      } else if ((e = r.match(/^#([a-f0-9]{3,4})$/i))) {\n        for (s = (e = e[1])[3], a = 0; a < 3; a++) t[a] = parseInt(e[a] + e[a], 16)\n        s && (t[3] = parseInt(s + s, 16) / 255)\n      } else if (\n        (e = r.match(\n          /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/\n        ))\n      ) {\n        for (a = 0; a < 3; a++) t[a] = parseInt(e[a + 1], 0)\n        e[4] && (e[5] ? (t[3] = 0.01 * parseFloat(e[4])) : (t[3] = parseFloat(e[4])))\n      } else {\n        if (\n          !(e = r.match(\n            /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/\n          ))\n        )\n          return (e = r.match(/^(\\w+)$/))\n            ? \"transparent\" === e[1]\n              ? [0, 0, 0, 0]\n              : hasOwnProperty.call(colorNames, e[1])\n              ? (((t = colorNames[e[1]])[3] = 1), t)\n              : null\n            : null\n        for (a = 0; a < 3; a++) t[a] = Math.round(2.55 * parseFloat(e[a + 1]))\n        e[4] && (e[5] ? (t[3] = 0.01 * parseFloat(e[4])) : (t[3] = parseFloat(e[4])))\n      }\n      for (a = 0; a < 3; a++) t[a] = clamp(t[a], 0, 255)\n      return (t[3] = clamp(t[3], 0, 1)), t\n    }),\n    (cs.get.hsl = function (r) {\n      if (!r) return null\n      var e = r.match(\n        /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/\n      )\n      if (e) {\n        var a = parseFloat(e[4])\n        return [\n          ((parseFloat(e[1]) % 360) + 360) % 360,\n          clamp(parseFloat(e[2]), 0, 100),\n          clamp(parseFloat(e[3]), 0, 100),\n          clamp(isNaN(a) ? 1 : a, 0, 1),\n        ]\n      }\n      return null\n    }),\n    (cs.get.hwb = function (r) {\n      if (!r) return null\n      var e = r.match(\n        /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/\n      )\n      if (e) {\n        var a = parseFloat(e[4])\n        return [\n          ((parseFloat(e[1]) % 360) + 360) % 360,\n          clamp(parseFloat(e[2]), 0, 100),\n          clamp(parseFloat(e[3]), 0, 100),\n          clamp(isNaN(a) ? 1 : a, 0, 1),\n        ]\n      }\n      return null\n    }),\n    (cs.to.hex = function () {\n      var r = swizzle(arguments)\n      return (\n        \"#\" +\n        hexDouble(r[0]) +\n        hexDouble(r[1]) +\n        hexDouble(r[2]) +\n        (r[3] < 1 ? hexDouble(Math.round(255 * r[3])) : \"\")\n      )\n    }),\n    (cs.to.rgb = function () {\n      var r = swizzle(arguments)\n      return r.length < 4 || 1 === r[3]\n        ? \"rgb(\" + Math.round(r[0]) + \", \" + Math.round(r[1]) + \", \" + Math.round(r[2]) + \")\"\n        : \"rgba(\" +\n            Math.round(r[0]) +\n            \", \" +\n            Math.round(r[1]) +\n            \", \" +\n            Math.round(r[2]) +\n            \", \" +\n            r[3] +\n            \")\"\n    }),\n    (cs.to.rgb.percent = function () {\n      var r = swizzle(arguments),\n        e = Math.round((r[0] / 255) * 100),\n        a = Math.round((r[1] / 255) * 100),\n        s = Math.round((r[2] / 255) * 100)\n      return r.length < 4 || 1 === r[3]\n        ? \"rgb(\" + e + \"%, \" + a + \"%, \" + s + \"%)\"\n        : \"rgba(\" + e + \"%, \" + a + \"%, \" + s + \"%, \" + r[3] + \")\"\n    }),\n    (cs.to.hsl = function () {\n      var r = swizzle(arguments)\n      return r.length < 4 || 1 === r[3]\n        ? \"hsl(\" + r[0] + \", \" + r[1] + \"%, \" + r[2] + \"%)\"\n        : \"hsla(\" + r[0] + \", \" + r[1] + \"%, \" + r[2] + \"%, \" + r[3] + \")\"\n    }),\n    (cs.to.hwb = function () {\n      var r = swizzle(arguments),\n        e = \"\"\n      return (\n        r.length >= 4 && 1 !== r[3] && (e = \", \" + r[3]),\n        \"hwb(\" + r[0] + \", \" + r[1] + \"%, \" + r[2] + \"%\" + e + \")\"\n      )\n    }),\n    (cs.to.keyword = function (r) {\n      return reverseNames[r.slice(0, 3)]\n    })\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Color\",\n      desc: \"Color convert\",\n      input: { type: \"string\" },\n      output: { type: \"string\" },\n      options: [{ name: \"format\", type: \"string\", default: \"hex\" }],\n    },\n    run(input, options, context) {\n      console.log(cs.to.hex([1, 2, 3, 1]))\n      return cs.to[options.format](cs.get(input).value)\n    },\n  }\n  return nodeConfig\n})()","id":"c31d573b-d68a-436a-8f44-a5c7a5285bb0","config":{"name":"Color","desc":"Color convert","input":{"type":"string"},"output":{"type":"string"},"options":[{"name":"format","type":"string","default":"hex"}]}},{"_raw":"(function () {\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Base64\",\n      desc: \"Base64 codec\",\n      input: { type: \"string\" },\n      output: { type: \"string\" },\n      options: [\n        {\n          name: \"type\",\n          type: \"enum\",\n          enumItems: [\n            { name: \"decode\", value: \"decode\" },\n            { name: \"encode\", value: \"encode\" },\n          ],\n          default: \"decode\",\n        },\n      ],\n    },\n    run(input, options, context) {\n      if (options.type === \"decode\") {\n        return window.atob(input)\n      } else {\n        return window.btoa(input)\n      }\n    },\n  }\n  return nodeConfig\n})()","id":"fabe84ef-d153-44a5-a365-e0472a48ed0f","config":{"name":"Base64","desc":"Base64 codec","input":{"type":"string"},"output":{"type":"string"},"options":[{"name":"type","type":"enum","enumItems":[{"name":"decode","value":"decode"},{"name":"encode","value":"encode"}],"default":"decode"}]}},{"_raw":"(function () {\n  /** @type {CompositeX.MetaNodeConfig} */\n  const nodeConfig = {\n    config: {\n      name: \"Pinyin\",\n      desc: \"Pinyin convertion based on pinyin-api.vercel.app\",\n      input: { type: \"string\" },\n      output: { type: \"any\" },\n      options: [\n        { name: \"apiOptions\", type: \"json\" },\n        {\n          name: \"outputType\",\n          type: \"enum\",\n          default: \"list\",\n          enumItems: [\n            { name: \"text\", value: \"text\" },\n            { name: \"list\", value: \"list\" },\n          ],\n        },\n      ],\n    },\n    async run(input, options, context) {\n      const url = new URL(\"https://pinyin-api.vercel.app/api/generate\")\n      url.searchParams.append(\"wd\", input)\n      Object.entries(options.apiOptions || {}).forEach(([key, value]) => {\n        url.searchParams.append(key, value)\n      })\n      const result = await context.fetch(url.toString()).then((res) => res.data)\n      if (options.outputType === \"text\") {\n        return result.join(\" \")\n      } else {\n        return result\n      }\n    },\n  }\n  return nodeConfig\n})()","id":"218a1789-e854-4bff-9771-914141ed0d8d","config":{"name":"Pinyin","desc":"Pinyin convertion based on pinyin-api.vercel.app","input":{"type":"string"},"output":{"type":"any"},"options":[{"name":"apiOptions","type":"json"},{"name":"outputType","type":"enum","default":"list","enumItems":[{"name":"text","value":"text"},{"name":"list","value":"list"}]}]}}]